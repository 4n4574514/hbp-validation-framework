# input {
# 	tcp {
# 		port => 5000
# 	}
# }


# input {
#   tcp {
#     'port' => "9998"
#     codec => json
#   }

#   udp {
#     'port' => "9999"
#     codec => json
#   }
# }

# output {
#   elasticsearch {
#     embedded => true
#   }
# }

input {
  beats {

    port => 5044
  }
}

# input {
#   # http {
#   tcp {
#     port => 5044
#   }
# }

filter {
  grok {
    
    #if web client
    #"https://validation-dev.brainsimulation.eu/?ctx=beb227f7-34c0-43b9-9de5-22dbc9645440" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/60.0.3112.78 Chrome/60.0.3112.78 Safari/537.36" 0.586
    match => { "log" => '%{TIMESTAMP_ISO8601:log_timestamp} %{LOGLEVEL:log_level} %{WORD:server_engine}: %{IPV4:ip} - - "%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}" %{NUMBER:server_response} %{NUMBER: unknown_number} "%{URI:uri}" %{GREEDYDATA:untreated_part_log}' }
    match => { "log" => '%{TIMESTAMP_ISO8601:log_timestamp} %{LOGLEVEL:log_level} %{WORD:server_engine}: %{IPV4:ip} - - "%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}" %{NUMBER:server_response} %{NUMBER: unknown_number} %{GREEDYDATA:untreated_part_log}' }
    match => { "log" => '%{GREEDYDATA:untreated_part_log}' }
 
  }
}


output {

  #Add this if you attend to debug
  # stdout { 
  #     codec => rubydebug 
  # } 


  elasticsearch { hosts => ["82.196.10.240:9200"] }
  # elasticsearch { hosts => ["127.0.0.1:9300"] }

  # stdout {
  #   # path => /tmp/my_output_text_file
  #   codec => rubydebug
  # }
}


# ##to add security : 
# # input {
# #    port => 3332
# #    user => myuser
# #    password => "$tr0ngP4ssWD!"
# #    ssl => on
# #    keystore => "/tmp/mykeystore.jks"
# #    keystore_password => "keystore_pass"
# # }




##################################################
##### For fileBeat data #####
# input {
#   beats {
#     port => 5044
# 	# ssl => true
# 	# ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
# 	# ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
#   }
# }

